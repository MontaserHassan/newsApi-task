{
	"info": {
		"_postman_id": "6aedc77f-677a-4412-97b6-ea2d0ce28dae",
		"name": "newsApi-task",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28090962",
		"_collection_link": "https://montaser99.postman.co/workspace/Team-Workspace~faacda42-8504-486e-872b-5f649314f2c6/collection/28090962-6aedc77f-677a-4412-97b6-ea2d0ce28dae?action=share&source=collection_link&creator=28090962"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "logout user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MDNkZWE5M2MwYzMyYzlhOGVmOGVhNCIsInNlY3JldEtleSI6IjNlYzUzYjM0ZWM4YTBmNTFlZGU2ZDIyMiIsImlhdCI6MTcxMTUyOTY0MSwiZXhwIjoxNzExNjE2MDQxfQ.8ggU1K3dGrXSuF35Ug8QJhRW369-3sNHkrP63JuJ0qs",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{highPoint}}/user/logout",
							"host": [
								"{{highPoint}}"
							],
							"path": [
								"user",
								"logout"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"montaser@gmail.com\",\n\t\"password\": \"M0nT@ser\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{highPoint}}/user/auth/login",
							"host": [
								"{{highPoint}}"
							],
							"path": [
								"user",
								"auth",
								"login"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "get profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MDRjNjI2MWQ1YjUzMDAyMWZjNTJlOSIsInNlY3JldEtleSI6ImFmZTdkMmFhMjNhZWQ2ODU1Nzg3YWQ0MyIsImlhdCI6MTcxMTczMDE2NCwiZXhwIjoxNzExNzQ0NTY0fQ.lXRUQU4PNf1aaOU6XoldHdZrxpyxcV3Fp0tJe9qbj_c",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{highPoint}}/user/profile",
							"host": [
								"{{highPoint}}"
							],
							"path": [
								"user",
								"profile"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "home",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MDRjNjI2MWQ1YjUzMDAyMWZjNTJlOSIsInNlY3JldEtleSI6ImFmZTdkMmFhMjNhZWQ2ODU1Nzg3YWQ0MyIsImlhdCI6MTcxMTczMDE2NCwiZXhwIjoxNzExNzQ0NTY0fQ.lXRUQU4PNf1aaOU6XoldHdZrxpyxcV3Fp0tJe9qbj_c",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{highPoint}}/user/home?page=2",
							"host": [
								"{{highPoint}}"
							],
							"path": [
								"user",
								"home"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"fullName\": \"Montaser Hassan\",\n\t\"email\": \"montaser@gmail.com\",\n\t\"password\": \"M0nT@ser\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{highPoint}}/user/auth/register",
							"host": [
								"{{highPoint}}"
							],
							"path": [
								"user",
								"auth",
								"register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "source",
			"item": [
				{
					"name": "get all sources with pagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MDRjNjI2MWQ1YjUzMDAyMWZjNTJlOSIsInNlY3JldEtleSI6IjExMWM1ZGU4MmRiZjA1M2Q2NWRhMTQ2ZiIsImlhdCI6MTcxMTcxMDYyOCwiZXhwIjoxNzExNzI1MDI4fQ.Y5DhNbSt8rxZuPTPV3akFp1mjH3f2G7w2ekMWi2SMvc",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{highPoint}}/sources/newsSources?page=6",
							"host": [
								"{{highPoint}}"
							],
							"path": [
								"sources",
								"newsSources"
							],
							"query": [
								{
									"key": "page",
									"value": "6"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "get all sources",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MDRjNjI2MWQ1YjUzMDAyMWZjNTJlOSIsInNlY3JldEtleSI6IjExMWM1ZGU4MmRiZjA1M2Q2NWRhMTQ2ZiIsImlhdCI6MTcxMTcxMDYyOCwiZXhwIjoxNzExNzI1MDI4fQ.Y5DhNbSt8rxZuPTPV3akFp1mjH3f2G7w2ekMWi2SMvc",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{highPoint}}/sources/newsSources",
							"host": [
								"{{highPoint}}"
							],
							"path": [
								"sources",
								"newsSources"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "add subscribe",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MDRjNjI2MWQ1YjUzMDAyMWZjNTJlOSIsInNlY3JldEtleSI6ImFmZTdkMmFhMjNhZWQ2ODU1Nzg3YWQ0MyIsImlhdCI6MTcxMTczMDE2NCwiZXhwIjoxNzExNzQ0NTY0fQ.lXRUQU4PNf1aaOU6XoldHdZrxpyxcV3Fp0tJe9qbj_c",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{highPoint}}/sources/hacker-news",
							"host": [
								"{{highPoint}}"
							],
							"path": [
								"sources",
								"hacker-news"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MDRjNjI2MWQ1YjUzMDAyMWZjNTJlOSIsInNlY3JldEtleSI6ImFmZTdkMmFhMjNhZWQ2ODU1Nzg3YWQ0MyIsImlhdCI6MTcxMTczMDE2NCwiZXhwIjoxNzExNzQ0NTY0fQ.lXRUQU4PNf1aaOU6XoldHdZrxpyxcV3Fp0tJe9qbj_c",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{highPoint}}/sources/hacker-news",
							"host": [
								"{{highPoint}}"
							],
							"path": [
								"sources",
								"hacker-news"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "health",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{highPoint}}",
					"host": [
						"{{highPoint}}"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "test-newsApi",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://newsapi.org/v2/everything?apiKey=20f6b8237dc945d7a671bd9e30797aa2&q=hacker-news",
					"protocol": "https",
					"host": [
						"newsapi",
						"org"
					],
					"path": [
						"v2",
						"everything"
					],
					"query": [
						{
							"key": "from",
							"value": "2024-02-28",
							"disabled": true
						},
						{
							"key": "sortBy",
							"value": "publishedAt",
							"disabled": true
						},
						{
							"key": "apiKey",
							"value": "20f6b8237dc945d7a671bd9e30797aa2"
						},
						{
							"key": "q",
							"value": "hacker-news"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}